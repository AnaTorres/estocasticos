#Estados
def readMessage(name):
    archive=open(name,'r')         
    line=archive.readlines()        
    line2=""
    for i in line:
        line2=line2+i
    archive.close()
    return line2

def evalueEntry(text,identifier):
    if (identifier == 1):
    #Entrada / Expresiones regulares
        if (re.match(inputPattern,text)):
            return 1
        else:
            return 0 
        
    elif (identifier==2):
    #Entrada/ arreglo
        correct = True
        
        for i in text:
            if ( (i in entry_language) == False):
                correct=False
                break
        if( correct == True):
            return 1
        else:
            return 0
#Fin Estados
#Estados2
def evalueExit(text,identifier):
    if(identifier==1):
    #Salida / Expresiones regulares    
        
        if (re.match(exitPattern,text)):
            return 1
        else:
            return 0
    elif(identifier==2):
    #Salida / arreglo
        correct = True
            
        for i in text:
            if ( (i in exit_language) == False):
                correct=False
                break
        if( correct == True):
            return 1
        else:
            return 0

def encrypt(text):
    ent=[]
    textoPlano = []
    c = []
    tp = text.strip().split()
    palabras = []
    for i in range(len(tp)):
        palabras.append(tp[i])
    for i in range(len(palabras)):
        for j in range(len(palabras[i])):
            textoPlano.append(ord(palabras[i][j]))              
    e,d,n = RSA.generarLlave()
    for i in range(len(textoPlano)):
        m = textoPlano[i]
        c.append(RSA.powerMod (m,e,n))
    return c

states = {'1': readMessage, '2':evalueEntry, '3':encrypt, '5':evalueExit, '6':writeMessage}
#Fin estados2
